<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" >
	
     
     <!-- 
      This config tells spring to recursively scan for java classes starting from package com.safeway 
      that are to be managed beans in the spring container. Classes that become managed spring beans must
      be annotated with @Service, @Component or @Repository. 
     -->
	 <context:component-scan base-package="com.vcl"/>
     
     <!-- Tells spring to use spring annotations for constructing spring container managed beans. -->
     <context:annotation-config/>

	<!-- Data source -->    
    <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName" value="${test.vcl.db.driver}" />		
		<property name="url" value="${test.vcl.db.url}" />
		<property name="username" value="${test.vcl.db.username}" />
		<property name="password" value="${test.vcl.db.password}" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="10" />
		<property name="maxWait" value="50" />
		<property name="defaultAutoCommit" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="2" />
	</bean>
    
	 
     <!-- Persistence Unit Manager -->
     <bean id="persistUnitMgr" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		  
		  <property name="defaultDataSource" ref="dataSource" />
		  
		  <property name="dataSources" >
		  	<map>
		  		<entry key="dataSource" value-ref="dataSource" />
		  	</map>
		  </property>
	  			
		  <property name="persistenceXmlLocations">
		    <list>
		     <value>classpath:/jpa/persistence.xml</value>
		    </list>
		  </property>
	 </bean>
	 
	 
 	
 	 <!-- Entity Manager Factory -->    
     <bean id="entityManagerFactory" 
       class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      
	 	  <property name="persistenceUnitManager" ref="persistUnitMgr"/>
	  		
		  <property name="jpaVendorAdapter">
		    <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		        <property name="showSql" value="true"/>
		        <property name="database" value="DEFAULT"/>
		    </bean>
		  </property>
		  <property name="jpaProperties">
		        <props>
		       		<prop key="hibernate.dialect">${test.vcl.hibernate.dialect}</prop>
		       		<prop key="hibernate.hbm2ddl.auto">${test.vcl.hibernate.hbm2ddl.auto}</prop>
		       		<prop key="hibernate.cache.use_second_level_cache">false</prop>
			    	<prop key="hibernate.cache.use_query_cache">false</prop>
			    </props>
		  </property>
	 </bean>
	 
	 <!--  Create Transaction Manager for local jdbc testing -->
	 <bean id="transactionManager" 
	 	class="org.springframework.orm.jpa.JpaTransactionManager">
		
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		
	 </bean>
	 
	 <!-- use proxy-target-class to force use of cglib (as we inject concrete classes) -->
	 <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	 
	 <bean id="bootstrapWorkUnitProcessor" class="com.vcl.startup.BootstrapWorkUnitProcessor">
	 </bean>
	 
</beans>
